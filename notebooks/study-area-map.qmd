---
title: "Study Area Map"
author: "Carolyn Koehn"
---

```{r}
#| label: setup

library(sf)
library(tidyverse)
library(terra)
library(patchwork)
library(ggspatial)

pixel_size <- 1000
epsg <- 5070

aoi <- tigris::counties("ID") %>%
  filter(NAME %in% c("Jefferson", "Gem", "Madison", "Clark", "Jerome", "Bonneville", "Teton", "Power", "Blaine", "Elmore", "Butte", "Adams", "Minidoka", "Bingham", "Ada", "Cassia", "Payette", "Fremont", "Bannock", "Twin Falls", "Owyhee", "Washington", "Gooding", "Lincoln", "Camas", "Canyon")) %>%
  st_transform(epsg)

template <- rast(aoi, resolution=pixel_size)
```

## Land Cover

- Land cover data from [AFT](https://csp-fut.appspot.com/) can be requested: https://survey123.arcgis.com/share/3f8d2e46cec64288b53d235fa7cf7d40

```{r}
#| label: "land use processing"

landuse <- rast("../data/land_cover_and_use_2016_CONUS_30m.tif")

land_use_cats <- data.frame(value=c(1,2,3,4,5,6,7,8,9,10,12,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1112),
                            class=c("Cropland","Pastureland","Rangeland","Forestland","Woodland","Urban and highly developed areas","Water","Federal lands without grazing","Federal lands with grazing","Other areas","Transportation","Cropland within LDR","Pastureland within LDR","Rangeland within LDR","Forestland within LDR","Woodland within LDR","UHD areas within LDR", "Water within LDR","Federal lands without grazing within LDR","Federal lands with grazing within LDR","Other areas within LDR","Transportation within LDR"),
                            color=c("#02682c","#61aa36","#e2c85f","#ac9e8d","#564F46","#601818","#75a8ea","#e2e2d5","#d8d7a9","#f2f1dc","#ab3c09","#02682c","#61aa36","#e2c85f","#ac9e8d","#564F46","#601818","#75a8ea","#e2e2d5","#d8d7a9","#f2f1dc","#ab3c09"))

# as categorical raster
levels(landuse) <- data.frame(ID=land_use_cats$value,
                          landuse=land_use_cats$class)

idaho <- tigris::states() %>%
  filter(NAME == "Idaho")

landuse_srp <- project(landuse, template, method="mode")

landuse_reclass <- ifel(landuse_srp>1000, landuse_srp-1100, landuse_srp)

lu_rc <- as.factor(landuse_reclass)
levels(lu_rc) <- data.frame(ID=land_use_cats$value[1:11],
                          landuse=land_use_cats$class[1:11])
coltab(lu_rc) <- data.frame(ID=land_use_cats$value[1:11],
                            color=land_use_cats$color[1:11])

lu_rc <- mask(lu_rc, aoi)

lu_rc_df <- as.data.frame(lu_rc, xy=TRUE)
```

```{r}
#| label: "fig-studyarea-lu"
#| fig-width: 10
#| fig-height: 6

inset <- ggplot(idaho) +
  geom_sf(fill="white") +
  geom_sf(data=st_union(aoi), fill="gray") +
  theme_void()
inset_us <- tigris::states() %>% 
  filter(!(STUSPS %in% c("HI", "AK", "VI", "MP", "GU", "AS", "PR"))) %>%
  st_union(.) %>%
  ggplot() +
  geom_sf(fill="white") +
  geom_sf(data=idaho, fill="gray") +
  theme_void()

lu_rc_df <- filter(lu_rc_df, landuse!="Transportation")

land_plot <- ggplot(data=lu_rc_df, aes(x=x, y=y, fill=landuse)) +
  geom_raster() +
  scale_fill_manual(values=land_use_cats$color[c(1:4,6:11)], name="Land Use",
                    labels=c(land_use_cats$class[1:2], "Non-federal\nrangeland", "Forestland","Urban and\nhighly developed areas", "Water", "Federal lands without\nlivestock grazing", "Federal lands with\nlivestock grazing", "Other areas")) +
  labs(tag="a") +
  annotation_scale() +
  annotation_north_arrow(height=unit(0.55, "cm"), width=unit(0.55, "cm"),
                         pad_y = unit(0.7, "cm"),
                         which_north="true",
                         style = north_arrow_orienteering(text_size = 8)) +
  theme_void() +
  coord_sf(default_crs=epsg, crs=epsg) +
  guides(fill = guide_legend(nrow=5)) +
  theme(legend.position = "bottom",
        legend.title.position = "top",
        plot.tag = element_text(),
        plot.tag.location = "panel",
        plot.tag.position = c(0.9, 0.9))

studyarea_lu <- land_plot #+ inset_element(inset, left=0.3, right=0.7, top=1, bottom=0.7)

studyarea_lu
```

```{r}
#| label: tbl-land-use
#| message: false
#| warning: false

landuse_30m <- crop(landuse, 
                    st_transform(aoi, crs=st_crs(landuse)),
                    progress=FALSE)
landuse_30m <- mask(landuse_30m, st_transform(aoi, st_crs(landuse_30m)),
                    progress=FALSE)

lu_tbl <- freq(landuse_30m) %>%
  mutate(value = str_replace(value,
                             "Urban and highly developed areas",
                             "Urban and highly developed areas (UHD)"),
         area_km2 = count*(900/1e6)) %>%
  select(value, area_km2)

knitr::kable(lu_tbl, digits=0, col.names = c("Land Use", "Total Area (km$^2$)"))
```


## Land Management / Tenure

Re-categorize BLM surface management agency data. The API call is the 2023 BLM Idaho Surface Management Agency (Surface Ownership) dataset, also available for download at https://gbp-blm-egis.hub.arcgis.com/pages/idaho.

```{r}
#| label: "BLM-SMA prep"
#| warning: false

id_lt <- st_read("https://gis.blm.gov/idarcgis/rest/services/realty/BLM_ID_Surface_Management_Agency/FeatureServer/0/query?where=1%3D1&outFields=MGMT_AGNCY,AGNCY_NAME&outSR=4326&f=json", quiet=TRUE) %>%
  st_transform(st_crs(aoi)) %>%
  st_make_valid()
lt <- st_intersection(id_lt, aoi)
lt$Simple_Tenure <- ifelse(lt$AGNCY_NAME == "PRIVATE", "Private",
                            ifelse(lt$AGNCY_NAME %in% c("BIA", "IR"), "Tribal",
                              ifelse(lt$AGNCY_NAME %in% c("OTHER", "HSTRCWTR"), "Other",
                                ifelse(str_starts(lt$AGNCY_NAME, "STATE"), "State", "Federal"))))

lt_merge <- lt %>%
  group_by(Simple_Tenure) %>%
  group_modify(~ st_union(.x) %>% as_tibble()) %>%
  ungroup() %>%
  st_as_sf()
```

Crop PALD data and convert to raster. `PALD_public_May2024.zip` was requested from American Farmland Trust (maps\@farmland.org) in July 2024 (https://farmlandinfo.org/statistics/pald/).

```{r}
#| label: "PALD prep"
#| warning: false

pald <- st_read("/vsizip/../data/PALD_public_May2024.zip/PALD_public_May2024.shp", quiet=TRUE) %>%
  filter(state == "Idaho") %>%
  st_transform(epsg) %>%
  st_make_valid(.) %>%
  st_intersection(., aoi)
```

Filter NCED easements to those with non-agricultural purposes and convert to raster. `NCED_03082024_shp.zip` is the Complete U.S. NCED Dataset retrieved from https://www.conservationeasement.us/downloads.

```{r}
#| label: "NCED prep"
#| warning: false

nced_non_farm <- st_read("/vsizip/../data/NCED_07232024_shp.zip/NCED_Polygons_07232024.shp", quiet=TRUE) %>%
  filter(state == "ID") %>%
  st_transform(st_crs(aoi)) %>%
  st_make_valid() %>%
  st_intersection(., aoi) %>%
  
  filter(duration == "PERM") %>%
  filter(!(purpose %in% c("FARM", "RAN"))) %>%
  filter(!(str_detect(sitename, pattern = "Farm") |
           str_detect(sitename, pattern = "Ranch") |
           str_detect(sitename, pattern = "Agricultur") |
           str_detect(sitename, pattern = "Grassland")))

nced_non_farm <- st_difference(nced_non_farm, st_union(pald))
```

Subtract easements and PALs from private land category:

```{r}
private_no_pals <- st_difference(lt_merge[which(lt_merge$Simple_Tenure == "Private"),], st_union(pald))
private_no_pals_otheas <- st_difference(private_no_pals, st_union(nced_non_farm))

# cast to multipolygon
new_private <- private_no_pals_otheas %>%
  st_collection_extract() %>%
  st_cast('MULTIPOLYGON') %>%
  st_union() %>%
  st_as_sf() %>%
  mutate(Simple_Tenure = "Private") %>%
  rename(geometry = x) %>%
  relocate(Simple_Tenure)

lt_merge[which(lt_merge$Simple_Tenure == "Private"), ] <- new_private

pald_merge <- st_as_sf(st_union(pald)) %>%
  mutate(Simple_Tenure = "PAL") %>%
  rename(geometry = x) %>%
  relocate(Simple_Tenure)
eas_merge <- st_as_sf(st_union(nced_non_farm)) %>%
  mutate(Simple_Tenure = "Other easements") %>%
  rename(geometry = x) %>%
  relocate(Simple_Tenure)

lt_merge <- rbind(lt_merge, pald_merge, eas_merge)
```


Create merged raster data for land tenure map figure:

```{r}
#| label: map-data

lt_map_data <- rasterize(lt_merge, template, field="Simple_Tenure")
```

Create table of the distribution of land management categories in the study area:

```{r}
#| label: tbl-lt-dist

lt_table <- data.frame(LT = lt_merge$Simple_Tenure,
                       Area = round(units::set_units(st_area(lt_merge), "km^2"), 0)) %>%
  mutate(Percent = round(units::drop_units(Area/sum(units::set_units(st_area(aoi), "km^2"))*100), 1))
lt_table <- arrange(lt_table, desc(Percent))

knitr::kable(lt_table,
             col.names=c("Land Tenure", "Area", "Percent of Study Area"))
```

Create map figure:

```{r}
#| label: fig-lt
#| fig-cap: "Land management in Idaho's Snake River Plain. The private lands category has no known easements or land protections."
#| fig-height: 4
#| fig-width: 5

lt_map_data_df <- as.data.frame(lt_map_data, xy=TRUE) %>%
  mutate(Simple_Tenure = factor(Simple_Tenure,
                                levels=lt_table$LT))

leg_labs <- paste0(lt_table$LT, "\n", 
                   units::drop_units(lt_table$Area), " sq km\n", 
                   lt_table$Percent, "%")

studyarea_lt <- ggplot(lt_map_data_df, aes(x=x, y=y, fill=Simple_Tenure)) +
  geom_raster() +
  scale_fill_viridis_d(name = "Land Tenure", option="plasma", direction=-1,
                       labels = leg_labs) +
  labs(tag="b") +
  annotation_scale() +
  annotation_north_arrow(height=unit(0.55, "cm"), width=unit(0.55, "cm"),
                         pad_y = unit(0.7, "cm"),
                         which_north="true",
                         style = north_arrow_orienteering(text_size = 8)) +
  theme_void() +
  theme(legend.key.spacing.y = unit(0.2, 'cm')) +
  coord_sf(default_crs = epsg, crs=epsg) +
  guides(fill = guide_legend(nrow=4)) +
  theme(legend.position = "bottom",
        legend.title.position = "top",
        plot.tag = element_text(),
        plot.tag.location = "panel",
        plot.tag.position = c(0.9, 0.9))

studyarea_lt
```

Combine figures:

```{r}
#| label: fig-studyarea-2
#| fig-height: 5.5
#| fig-width: 8.5
#| fig-cap: "Land use [@hunter2022] and land tenure (see @supptbla-sma) in Idaho's Snake River Plain."

layout <- c(
  patchwork::area(t = 1, l = 1, b = 6, r = 3),
  patchwork::area(t = 1, l = 5, b = 6, r = 7),
  patchwork::area(t = 1, l = 4, b = 2, r = 4),
  patchwork::area(t = 3, l = 4, b = 4, r = 4)
)

studyarea_lu + studyarea_lt + inset + inset_us + plot_layout(design=layout)
```

Save figure as image:

```{r}
#| eval: false

png(filename = "../figures/Figure_1.png",
    width = 8.5,
    height = 5.5,
    units = "in",
    res = 90)
studyarea_lu + studyarea_lt + inset + inset_us + plot_layout(design=layout)
dev.off()
```

