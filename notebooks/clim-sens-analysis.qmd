---
title: "Climate Models Sensitivity Analysis"
---

```{r}
#| label: setup

library(terra)
library(tidyverse)
library(gurobi)
library(prioritizr)
library(patchwork)
library(sf)
source("get_optim_function.R")

pixel_size <- 1000
epsg <- 5070
aoi <- st_read("../data/study_area/boundary.shp", quiet=TRUE) %>%
  st_transform(epsg)
template <- rast(aoi, resolution=pixel_size)

# table of all model combinations possible for analysis
grid_out_mit <- tidyr::crossing(SOC=0:1, CStorage=0:1, InVEST=0:1)[-1,]
grid_out_adap <- tidyr::crossing(ClimAcc=0:1, ClimStability=0:1)[-1,]
```

```{r}
#| label: "load data"
#| eval: false

cost <- rast("../data/fmv_5070_1km_USD_per_km2.tif")
# Cost values are too high for optimization
cost.mil <- cost/1e6

clim_mit_rasts <- c(rast("../data/climate_mitigation/Hengl_soil_organic_C_estimates.tif"),
                   rast("../data/climate_mitigation/Spawn_2010_carbon_storage_estimate.tif"),
                   rast("../data/climate_mitigation/InVEST/tot_c_cur_1km.tif"))
names(clim_mit_rasts) <- c("SOC", "CStorage", "InVEST")

clim_adapt_rasts <- c(rast("../data/climate_mitigation/Hamann_2014_climate_accessibility.tif"),
                      rast("../data/climate_mitigation/Carroll_2018_climate_stability.tif"))
names(clim_adapt_rasts) <- c("ClimAcc", "ClimStability")
```

```{r}
#| label: "c stock optimization series"
#| eval: false

# create full solution to compare to
solution_all <- generate_optim(inputs=clim_mit_rasts[[which(grid_out_mit[nrow(grid_out_mit),] == 1)]],
                           cost=cost.mil, targets=seq(0.05,0.75,0.05),
                           output.rasters=TRUE, output.table=FALSE,
                           force.solve = TRUE)
solutions_all_mit <- rast(solution_all)
names(solutions_all_mit) <- paste0("Target: ", seq(5,75,5), "%")
solutions_all_mit_agg <- aggregate(solutions_all_mit, fact=5, fun="mean")

# create data frame for EMD outputs to store
emd_series <- expand.grid(config = 1:(nrow(grid_out_mit)-1),
                          target = seq(5,75,5),
                          emd = NA)
emd_series$target_label <- paste0("Target: ", emd_series$target, "%")

# calculate optimization and EMD for each combination
for(i in 1:(nrow(grid_out_mit)-1)) {
  config <- generate_optim(inputs=clim_mit_rasts[[which(grid_out_mit[i,] == 1)]],
                           cost=cost.mil, targets=seq(0.05,0.75,0.05),
                           output.rasters=TRUE, output.table=FALSE,
                           force.solve = TRUE)
  
  solutions <- rast(config)
  names(solutions) <- paste0("Target: ", seq(5,75,5), "%")
  
  solutions_agg <- aggregate(solutions, fact=5, fun="mean")
  
  for(t in names(solutions_agg)) {
    emd_series[which(emd_series$config == i & emd_series$target_label == t), "emd"] <- emdist::emd2d(
      A = as.matrix(solutions_agg[[t]], wide=TRUE)/sum(as.matrix(solutions_agg[[t]], wide=TRUE), na.rm=TRUE), 
      B = as.matrix(solutions_all_mit_agg[[t]], wide=TRUE)/sum(as.matrix(solutions_all_mit_agg[[t]], wide=TRUE), na.rm=TRUE),
      xdist = 5, ydist = 5,
      max.iter = 1000)
  }

}

write.csv(emd_series, "../data/climate_mitigation/sensitivity_analysis/emd_series_mitigation.csv",
          row.names = FALSE)
```

```{r}
#| label: "adaptation optimization series"
#| eval: false

# create full solution to compare to
solution_all <- generate_optim(inputs=clim_adapt_rasts[[which(grid_out_adap[nrow(grid_out_adap),] == 1)]],
                           cost=cost.mil, targets=seq(0.05,0.75,0.05),
                           output.rasters=TRUE, output.table=FALSE,
                           force.solve = TRUE)
solutions_all_adap <- rast(solution_all)
names(solutions_all_adap) <- paste0("Target: ", seq(5,75,5), "%")
solutions_all_adap_agg <- aggregate(solutions_all_adap, fact=5, fun="mean")

# create data frame for EMD outputs to store
emd_series <- expand.grid(config = 1:(nrow(grid_out_adap)-1),
                          target = seq(5,75,5),
                          emd = NA)
emd_series$target_label <- paste0("Target: ", emd_series$target, "%")

# calculate optimization and EMD for each combination
for(i in 1:(nrow(grid_out_adap)-1)) {
  config <- generate_optim(inputs=clim_adapt_rasts[[which(grid_out_adap[i,] == 1)]],
                           cost=cost.mil, targets=seq(0.05,0.75,0.05),
                           output.rasters=TRUE, output.table=FALSE,
                           force.solve = TRUE)
  
  solutions <- rast(config)
  names(solutions) <- paste0("Target: ", seq(5,75,5), "%")
  
  solutions_agg <- aggregate(solutions, fact=5, fun="mean")
  
  for(t in names(solutions_agg)) {
    emd_series[which(emd_series$config == i & emd_series$target_label == t), "emd"] <- emdist::emd2d(
      A = as.matrix(solutions_agg[[t]], wide=TRUE)/sum(as.matrix(solutions_agg[[t]], wide=TRUE), na.rm=TRUE), 
      B = as.matrix(solutions_all_adap_agg[[t]], wide=TRUE)/sum(as.matrix(solutions_all_adap_agg[[t]], wide=TRUE), na.rm=TRUE),
      xdist = 5, ydist = 5,
      max.iter = 1000)
  }

}

write.csv(emd_series, "../data/climate_mitigation/sensitivity_analysis/emd_series_adaptation.csv",
          row.names = FALSE)
```

## C Stock Protection

Assessment:

First, we would like to see which configurations of inputs have the lowest difference to the full solution across targets. We can do this by calculating the area under the curve for the target-EMD series.

```{r}
#| label: fig-clim-emd-mit

emd_series <- read.csv("../data/climate_mitigation/sensitivity_analysis/emd_series_mitigation.csv")

grid_out_mit$config <- 1:nrow(grid_out_mit)

emd_series <- left_join(emd_series, grid_out_mit) %>%
  mutate(ninputs = rowSums(across(SOC:InVEST)))

auc_series <- data.frame(config = unique(emd_series$config),
                  auc = NA)

for(i in unique(emd_series$config)) {
  series.x <- filter(emd_series, config == i)$target
  series.y <- filter(emd_series, config == i)$emd
  
  AUC <- sum(diff(series.x) * zoo::rollmean(series.y, 2))
  
  auc_series[which(auc_series$config == i), "auc"] <- AUC
}

low_auc_series <- slice_min(auc_series, n=5, order_by=auc) %>%
  arrange(auc) %>%
  head(., n=3)
for(i in 1:nrow(low_auc_series)) {
  low_auc_series$leaves_out[i] <- paste(colnames(grid_out_mit)[which(grid_out_mit[low_auc_series$config[i],] == 0)], collapse=",\n")
}
low_auc_series <- low_auc_series %>%
  mutate(`Leaves Out` = str_replace_all(leaves_out, "SOC", "Soil Organic C"),
         `Leaves Out` = str_replace_all(`Leaves Out`, "InVEST", "C Storage (InVEST)"),
         `Leaves Out` = str_replace_all(`Leaves Out`, "CStorage", "C Storage (global est)")) %>%
  select(-leaves_out) %>%
  rename("AUC" = "auc")

emd_plot <- ggplot(emd_series, aes(x=target, y=emd, group=as.factor(config))) +
  geom_line(color="gray80") +
  geom_line(data=filter(emd_series, config %in% low_auc_series$config),
            color="purple", show.legend = FALSE) +
  scale_x_continuous(limits=c(5,75), breaks=seq(5,75,5),
                     name = "Target (% NCP protected)") +
  ylab("Difference from full solution (EMD)") +
  theme_classic() +
  theme(panel.background = element_blank())

emd_plot + inset_element(patchwork::wrap_table(select(low_auc_series, -config)), 
                         left=0.55, bottom=0.65, right=1, top=1.02,
                         on_top = FALSE)
```

We might also like to test the nearest solution to the full solution at our intended target (here, 30%).

```{r}
filter(emd_series, target==30 & 
         emd == min(filter(emd_series, target==30)$emd)) %>%
  arrange(ninputs) %>%
  select(-c(config, target_label))
```

## Climate Adaptation

Assessment:

First, we would like to see which configurations of inputs have the lowest difference to the full solution across targets. We can do this by calculating the area under the curve for the target-EMD series.

```{r}
#| label: fig-clim-emd-adap

emd_series <- read.csv("../data/climate_mitigation/sensitivity_analysis/emd_series_adaptation.csv")

grid_out_adap$config <- 1:nrow(grid_out_adap)

emd_series <- left_join(emd_series, grid_out_adap) %>%
  mutate(ninputs = rowSums(across(ClimAcc:ClimStability)))

auc_series <- data.frame(config = unique(emd_series$config),
                  auc = NA)

for(i in unique(emd_series$config)) {
  series.x <- filter(emd_series, config == i)$target
  series.y <- filter(emd_series, config == i)$emd
  
  AUC <- sum(diff(series.x) * zoo::rollmean(series.y, 2))
  
  auc_series[which(auc_series$config == i), "auc"] <- AUC
}

low_auc_series <- slice_min(auc_series, n=5, order_by=auc) %>%
  arrange(auc) %>%
  head(., n=5)
for(i in 1:nrow(low_auc_series)) {
  low_auc_series$leaves_out[i] <- paste(colnames(grid_out_adap)[which(grid_out_adap[low_auc_series$config[i],] == 0)], collapse=",\n")
}
low_auc_series <- low_auc_series %>%
  mutate(`Leaves Out` = str_replace_all(leaves_out, "ClimAcc", "Climate Accessibility"),
         `Leaves Out` = str_replace_all(`Leaves Out`, "ClimStability", "Climate Stability")) %>%
  select(-leaves_out) %>%
  rename("AUC" = "auc")

emd_plot <- ggplot(emd_series, aes(x=target, y=emd, group=as.factor(config))) +
  geom_line(color="gray80") +
  geom_line(data=filter(emd_series, config %in% low_auc_series$config),
            color="purple", show.legend = FALSE) +
  scale_x_continuous(limits=c(5,75), breaks=seq(5,75,5),
                     name = "Target (% NCP protected)") +
  ylab("Difference from full solution (EMD)") +
  theme_classic() +
  theme(panel.background = element_blank())

emd_plot + inset_element(patchwork::wrap_table(select(low_auc_series, -config)), 
                         left=0.5, bottom=0.65, right=1, top=1,
                         on_top = FALSE)
```

We might also like to test the nearest solution to the full solution at our intended target (here, 30%).

```{r}
filter(emd_series, target==30 & 
         emd == min(filter(emd_series, target==30)$emd)) %>%
  arrange(ninputs) %>%
  select(-c(config, target_label))
```